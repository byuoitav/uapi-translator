openapi: 3.0.0
info:
  title: AV API
  version: '1.0'
  description: The Domain API for AV devices across campus
servers: []
paths:
  /rooms:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
      operationId: get-rooms
      description: Returns basic information about AV Rooms filtered by the given query parameters
      parameters:
        - schema:
            type: string
          in: query
          name: room_number
          description: The Room Number for the desired rooms
        - schema:
            type: string
          in: query
          name: building_abbreviation
          description: The abbreviation for the building where the room resides
  /devices:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
      operationId: get-devices
      parameters:
        - schema:
            type: string
          in: query
          name: room_number
          description: "To search by the room number the \ndevice is in"
        - schema:
            type: string
          in: query
          name: building_abbreviation
          description: To search by the building that the device is in
        - schema:
            type: string
          in: query
          name: av_device_type
          description: To search by device type
      description: 'Returns a collection of devices with basic information, filtered by the given query parameters'
  '/devices/{av_device_id}':
    parameters:
      - schema:
          type: string
        name: av_device_id
        in: path
        required: true
        description: The ID of the AV Device
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      operationId: get-devices-device_id
      description: Returns basic information about the given device
  '/rooms/{room_id}':
    parameters:
      - schema:
          type: string
        name: room_id
        in: path
        required: true
        description: 'The ID of the Room in {BLDG}-{Room} format.'
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-rooms-room_id
      description: Returns information about the requested room.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
  /displays:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Display'
      operationId: get-displays
      description: 'Returns a collection of displays with basic information, filtered by the given query parameters  '
      parameters:
        - schema:
            type: string
          in: query
          name: room_number
          description: The room number that the display is in
        - schema:
            type: string
          in: query
          name: buliding_abbreviation
          description: The building that the display is in
  /inputs:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Input'
      operationId: get-inputs
      description: Returns basic information about AV Inputs filtered by the given query parameters
      parameters:
        - schema:
            type: string
          in: query
          name: room_number
          description: The room number where the input resides
        - schema:
            type: string
          in: query
          name: building_abbreviation
          description: The abbreviation for the building in which the input resides
  /audio_outputs:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Audio_Output'
      operationId: get-audio_outputs
      description: Returns a collection of Audio Output devices filtered by the given query parameters
      parameters:
        - schema:
            type: string
          in: query
          name: room_number
          description: "To search by the room number the \ndevice is in"
        - schema:
            type: string
          in: query
          name: building_abbreviation
          description: To search by the building that the device is in
        - schema:
            type: string
          in: query
          name: av_device_type
          description: To search by device type
      requestBody: {}
  '/audio_outputs/{av_audio_output_id}':
    parameters:
      - schema:
          type: string
        name: av_audio_output_id
        in: path
        required: true
        description: The ID of the Audio Output device
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audio_Output'
      operationId: get-audio_outputs-device_id
      description: Returns basic information about the specified audio output device.
      requestBody:
        description: ''
  '/audio_outputs/{av_audio_output_id}/state':
    parameters:
      - schema:
          type: string
        name: av_audio_output_id
        in: path
        required: true
        description: The ID for the Audio Output device
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audio_Output_State'
      operationId: get-audio_outputs-av_audio_output_id-state
      description: Returns state information about the given Audio Output device
  '/devices/{av_device_id}/properties':
    parameters:
      - schema:
          type: string
        name: av_device_id
        in: path
        required: true
        description: The ID of the AV Device
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device_Properties'
      operationId: get-devices-av_device_id-properties
      description: Returns arbitrary properties about the given devices
  '/devices/{av_device_id}/state':
    parameters:
      - schema:
          type: string
        name: av_device_id
        in: path
        required: true
        description: The ID of the AV Device
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device_State_Attributes'
      operationId: get-devices-av_device_id-properties-devices-av_device_id-state
      description: Returns arbitrary state attributes about the given device
  '/displays/{av_display_id}':
    parameters:
      - schema:
          type: string
        name: av_display_id
        in: path
        required: true
        description: The ID of the desired Display
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Display'
      operationId: get-displays-av_display_id
      description: Returns basic information about the given display
  '/displays/{av_display_id}/config':
    parameters:
      - schema:
          type: string
        name: av_display_id
        in: path
        required: true
        description: The ID of the desired AV Display
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Display_Config'
      operationId: get-displays-av_display_id-config
      description: Returns the configuration information about the given AV Display
  '/displays/{av_display_id}/state':
    parameters:
      - schema:
          type: string
        name: av_display_id
        in: path
        required: true
        description: The ID of the desired AV Display
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Display_State'
      operationId: get-displays-av_display_id-state
      description: Returns the state of the given AV Display
  '/inputs/{av_device_id}':
    parameters:
      - schema:
          type: string
        name: av_device_id
        in: path
        required: true
        description: The ID of the AV Device
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
      operationId: get-inputs-av_device_id
      description: Returns basic information about the given Input Device
  '/rooms/{room_id}/devices':
    parameters:
      - schema:
          type: string
        name: room_id
        in: path
        required: true
        description: 'The ID of the AV Room in {BLDG}-{Room Number} format'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room_Devices'
      operationId: get-rooms-room_id-devices
      description: Returns the devices that pertain to the given AV Room
      requestBody: {}
components:
  schemas:
    Room:
      title: Room
      type: object
      properties:
        av_room_id:
          type: string
        room_number:
          type: string
        building_abbreviation:
          type: string
        av_room_description:
          type: string
        av_resources:
          type: array
          items:
            type: object
            properties:
              quantity:
                type: integer
              resource:
                type: string
              locations:
                type: array
                items:
                  type: string
    Room_Devices:
      title: Room_Devices
      type: object
      properties:
        av_displays:
          title: UAPI-Value_Array
          type: array
          items:
            type: string
        av_audio_outputs:
          title: UAPI-Value_Array
          type: array
          items:
            type: string
        av_inputs:
          title: UAPI-Value_Array
          type: array
          items:
            type: string
    Device:
      title: Device
      type: object
      properties:
        av_device_id:
          type: string
        av_device_name:
          type: string
        av_device_type:
          type: string
        building_abbreviation:
          type: string
        room_number:
          type: string
      required:
        - av_device_id
        - av_device_name
        - av_device_type
        - building_abbreviation
        - room_number
    Display:
      title: Display
      type: object
      properties:
        av_display_id:
          type: string
        room_number:
          type: string
        building_abbreviation:
          type: string
    Display_Config:
      title: Display_Config
      type: object
      properties:
        av_devices:
          title: UAPI-Value_Array
          type: array
          items:
            type: string
        av_inputs:
          title: UAPI-Value_Array
          type: array
          items:
            type: string
    Display_State:
      title: Display_State
      type: object
      properties:
        av_display_powered:
          title: UAPI-Value
          type: boolean
        av_display_blanked:
          title: UAPI-Value
          type: boolean
        av_display_input:
          title: UAPI-Value
          type: string
    Input:
      title: Input
      type: object
      properties:
        av_device_id:
          type: string
        room_number:
          type: string
        building_abbreviation:
          type: string
        av_device_type:
          type: string
        av_outputs:
          type: array
          items:
            type: string
      required:
        - av_device_id
        - room_number
        - building_abbreviation
        - av_device_type
        - av_outputs
    Audio_Output:
      title: Audio_Output
      type: object
      properties:
        av_audio_output_id:
          type: string
        room_number:
          type: string
        building_abbreviation:
          type: string
        av_device_type:
          type: string
      required:
        - av_audio_output_id
        - room_number
        - building_abbreviation
        - av_device_type
    Audio_Output_State:
      title: Audio_Output_State
      type: object
      properties:
        av_audio_output_volume_level:
          title: UAPI-Value
          type: number
        av_audio_output_muted:
          title: UAPI-Value
          type: boolean
      required:
        - av_audio_output_volume_level
        - av_audio_output_muted
    Device_Properties:
      title: Device_Properties
      type: array
      items:
        type: object
        properties:
          av_device_property_name:
            type: string
          av_device_property_value:
            type: string
        required:
          - av_device_property_name
          - av_device_property_value
    Device_State_Attributes:
      title: Device_State_Attributes
      type: array
      items:
        type: object
        properties:
          av_device_state_attribute_name:
            type: string
          av_device_state_attribute_value:
            type: string
        required:
          - av_device_state_attribute_name
          - av_device_state_attribute_value
  securitySchemes: {}
